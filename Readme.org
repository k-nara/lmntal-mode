* lmntal-mode

An LMNtal development environment for Emacs

Emacs 用の LMNtal 開発環境

** Features

=lmntal-mode.el= provides two major modes :

- =lmntal-mode= for editing/running LMNtal programs (=.lmn=)
- =lmntal-slimcode-mode= for editing/running LMNtal intermediate codes (=.il=)

which offer :

- Automatic indentation
- Blink matching links (only for =lmntal-mode=)
- Keyword highlighting
- Bunch of utility commands
- =imenu= support
- =eldoc= support (only for =lmntal-slimcode-mode=)

-----

=lmntal-mode.el= は２つのメジャーモードを提供します：

- LMNtal プログラムを編集・実行するための =lmntal-mode=
- LMNtal 中間コードを編集・実行するための =lmntal-slimcode-mode=

それぞれのモードには次の機能があります：

- 自動インデント
- 対応するリンク名のハイライト (=lmntal-mode= のみ)
- シンタックスハイライト
- 便利なコマンド
- =imenu= に対応
- =eldoc= に対応 (=lmntal-slimcode-mode= のみ)

** Installation

Load this script

#+begin_src emacs-lisp
  (require 'lmntal-mode)
#+end_src

and =lmntal-mode= (=lmntal-slimcode-mode=) is automatically enabled
when opening =.lmn= (=.il=) files.

You can also manually turn the mode on with =M-x lmntal-mode=
(=lmntal-slimcode-mode=).

-----

このスクリプトをロードすると、

#+begin_src emacs-lisp
  (require 'lmntal-mode)
#+end_src

=.lmn= (=.il=) ファイルを開いた時、自動的に =lmntal-mode=
(=lmntal-slimcode-mode=) が設定されます。

=M-x lmntal-mode= (=lmntal-slimcode-mode=) で手動でメジャーモードを設定
することもできます。

** Keybinds

- Press =[C-M-a]= / =[C-M-e]= to jump to the beginning / end of rule
- Press =[C-c C-c]= to run region/buffer and see the trace
- Press =[C-c C-m]= to run region/buffer non-deterministically
- Press =[C-c C-i]= to compile region/buffer to see the VM code
- Press =[C-c C-g]= to visualize region/buffer with =graphene=

See also: section "LMNtal installation directory".

-----

- =[C-M-a]= (=[C-M-e]=) でルールの先頭 (末尾) にジャンプします
- =[C-c C-c]= で選択範囲 (またはバッファ全体) を実行しトレースを表示します
- =[C-c C-m]= で選択範囲 (またはバッファ全体) を非決定モードで実行します
- =[C-c C-i]= で選択範囲 (またはバッファ全体) をコンパイルし中間コードを表示します
- =[C-c C-g]= で選択範囲 (またはバッファ全体) を =graphene= で可視化します

"LMNtal installation directory" の項も併せて読んでください。

** Customization
*** LMNtal installation directory

You may optionally setup LMNtal installation directory so that you
can run LMNtal programs within Emacs.

#+begin_src emacs-lisp
  (setq lmntal-home-directory     "~/LMNtal/LaViT2_6_2/lmntal/"
        lmntal-slim-executable    "installed/bin/slim"
        lmntal-graphene-executabl "graphene/graphene.jar")
#+end_src

If you've set =LMNTAL_HOME= environment variable properly,
=lmntal-home-directory= can be omitted. The path must ends with "/"
and must contain a directory named =bin= with LMNtal compiler in it.

=lmntal-slim-executable= and =lmntal-graphene-executable= may be
either a full path or relative path from =lmntal-mode-directory=.

-----

Emacs 内から LMNtal プログラムを実行するために、 LMNtal のインストール
ディレクトリを設定することができます。

#+begin_src emacs-lisp
  (setq lmntal-home-directory     "~/LMNtal/LaViT2_6_2/lmntal/"
        lmntal-slim-executable    "installed/bin/slim"
        lmntal-graphene-executabl "graphene/graphene.jar")
#+end_src

=lmntal-home-directory= は、もしも環境変数 =LMNTAL_HOME= がすでに適切に
設定されていれば設定を省略できます。 =lmntal-home-directory= は必ず
"/" で終わり、かつ直下の =bin= ディレクトリに LMNtal コンパイラの実行ファ
イルが配置されていなければなりません。

=lmntal-slim-executable= および =lmntal-graphene-executable= はフルパス
でも、 =lmntal-home-directory= からの相対パスでもかまいません。

*** LMNtal compiler / VM options

You may optionally set options for LMNtal compilers and / or SLIM
virtual machine.

#+begin_src emacs-lisp
  (setq lmntal-compile-options '("--slimcode" "--hl")
        lmntal-runtime-options '("-t" "--hl" "--use-builtin-rule")
        lmntal-mc-options      '("--nd" "-t" "--hl" "--use-builtin-rule"))
#+end_src

-----

LMNtal コンパイラおよび SLIM VM に渡す実行オプションを設定することがで
きます。

#+begin_src emacs-lisp
  (setq lmntal-compile-options '("--slimcode" "--hl")
        lmntal-runtime-options '("-t" "--hl" "--use-builtin-rule")
        lmntal-mc-options      '("--nd" "-t" "--hl" "--use-builtin-rule"))
#+end_src

*** Graphviz integration

You may optionally install graphviz and set =lmntal-mc-use-dot=
non-nil to render reduction graphs with graphviz.

#+begin_src emacs-lisp
  (setq lmntal-mc-use-dot t)
#+end_src

-----

Graphviz をインストールし =lmntal-mc-use-dot= を非 =nil= に設定すると、
リダクショングラフが Graphviz で描画されます。

#+begin_src emacs-lisp
  (setq lmntal-mc-use-dot t)
#+end_src

*** Theming

You may optionally modify =lmntal-link-name-face= and / or
=lmntal-highlight-face= so that they look better in your colorscheme.

#+begin_src emacs-lisp
  (set-face-background 'lmntal-link-name-face "#003944")
  (set-face-foreground 'lmntal-highlight-face "#d06466")
#+end_src

-----

=lmntal-link-name-face= および =lmntal-highlight-face= はお使いのカ
ラースキームに合わせて変更できます。

#+begin_src emacs-lisp
  (set-face-background 'lmntal-link-name-face "#003944")
  (set-face-foreground 'lmntal-highlight-face "#d06466")
#+end_src

* 開発者向け：
** 引き継いでほしいマナーなど

- リファクタリング以外の変更があったら、ヘッダ内の =Version:=, =Change
  Log:=とコード内の =lmntal-mode-version= をその日の日付で更新する
  - 特に新機能の追加・削除をしたときは、 Readme に反映してちゃんとユー
    ザーが使えるように！

- 積極的にメンテしている人はヘッダ内の =Maintainer:= に自分の名前を追加
  する。逆に、長くメンテに関わっていない人の名前はその時メンテを主導し
  ている人の裁量で =Contributor:= に移動する
  - 困った時にだれに聞いたらいいかをはっきりさせる

- すべての変数・関数名は必ず =lmntal-= から始まるようにする
  - 特に private な (ユーザーが直接呼び出すことを想定しない) 変数・関数
    名は =lmntal--= から始めて、 private であることをわかりやすくする
  - これは Emacs Lisp の不文律

- 関数・変数には必ず説明文を付ける
  - 後でわからなくなったとき、 =M-x describe-function(variable)= でいつ
    でもチェックできるようになる

- =defvar= (グローバル変数) を極力使わない
  - ユーザー設定は =defcustom= で宣言する
  - 定数は =defconst= で宣言する
  - 関数の引数を増やすことでグローバル変数を作らずに済むことは多い
  - どう考えても必要な場合は、その変数の値を変更するような関数の数をな
    るべく減らすように気を付ける (いたるところで値が変更されていて流れ
    が追えないコードは人類にメンテできない)

** Tips

  - outline モードで構造化されているので、活用すると編集しやすい

    : (outline-minor-mode 1)
    : (setq-local outline-regexp "^[\s\t]*;;[\s]+\\+[+-]*\s")
    : (setq-local outline-level (lambda () (- (outline-level) 4)))
